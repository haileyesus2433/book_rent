// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]
  rentals   Rental[]
}

model Book {
  id         String   @id @default(uuid())
  title      String
  author     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  quantity   Int
  available  Int
  price      Float
  ownerId    String
  owner      User     @relation(fields: [ownerId], references: [id])
  approved   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  rentals    Rental[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  books Book[]
}

model Rental {
  id        String   @id @default(uuid())
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  startDate DateTime
  endDate   DateTime
  returned  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  OWNER
  ADMIN
}
